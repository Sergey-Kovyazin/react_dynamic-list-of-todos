{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","React","memo","query","setQuery","setFilter","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeTodoModalHandler","useState","selectedUser","selectUser","userId","useEffect","getUser","user","href","email","name","App","setTodos","filter","result","visibleTodos","useMemo","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98edd6fd.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  selectedTodo: Todo | null\n  selectTodo: (todo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )\n              : (\n                <td className=\"is-vcentered\" />\n              )}\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  classNames(todo.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger')\n                }\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', selectedTodo?.id === todo.id\n                    ? 'fa-eye-slash'\n                    : 'fa-eye')}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  query: string\n  setQuery: (event: string) => void\n  setFilter: (event: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  query,\n  setQuery,\n  setFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  closeTodoModalHandler: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  closeTodoModalHandler,\n  selectedTodo,\n}) => {\n  const [selectedUser, selectUser] = useState<User | null>(null);\n  const { userId, id, title } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId).then(user => selectUser(user));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeTodoModalHandler}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, selectTodo] = useState<Todo | null>(null);\n\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('All');\n\n  useEffect(() => {\n    getTodos().then(result => setTodos(result));\n  }, []);\n\n  const getVisibleTodos = () => {\n    switch (filter) {\n      case 'active':\n        return todos.filter(todo => !todo.completed && todo.title\n          .toLowerCase()\n          .includes(query.toLowerCase()));\n\n      case 'completed':\n        return todos.filter(todo => todo.completed && todo.title\n          .toLowerCase()\n          .includes(query.toLowerCase()));\n\n      default:\n        return todos.filter(todo => todo.title\n          .toLowerCase()\n          .includes(query.toLowerCase()));\n    }\n  };\n\n  const visibleTodos = useMemo(getVisibleTodos, [todos, query, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectTodo={selectTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal\n          closeTodoModalHandler={() => selectTodo(null)}\n          selectedTodo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}